/* Autogenerated by mlir-tblgen; don't manually edit. */
// clang-format off

syntax = "proto3";
package protocir;
option java_package = "org.jacodb.impl.grpc";

enum CIRAsmFlavor {
  AsmFlavor_X86Att = 0;
  AsmFlavor_X86Intel = 1;
}

enum CIRAtomicFetchKind {
  AtomicFetchKind_Add = 0;
  AtomicFetchKind_Sub = 1;
  AtomicFetchKind_And = 2;
  AtomicFetchKind_Xor = 3;
  AtomicFetchKind_Or = 4;
  AtomicFetchKind_Nand = 5;
  AtomicFetchKind_Max = 6;
  AtomicFetchKind_Min = 7;
}

enum CIRAwaitKind {
  AwaitKind_Init = 0;
  AwaitKind_User = 1;
  AwaitKind_Yield = 2;
  AwaitKind_Final = 3;
}

enum CIRBinOpKind {
  BinOpKind_Mul = 0;
  BinOpKind_Div = 1;
  BinOpKind_Rem = 2;
  BinOpKind_Add = 3;
  BinOpKind_Sub = 4;
  BinOpKind_And = 5;
  BinOpKind_Xor = 6;
  BinOpKind_Or = 7;
}

enum CIRBinOpOverflowKind {
  BinOpOverflowKind_Add = 0;
  BinOpOverflowKind_Sub = 1;
  BinOpOverflowKind_Mul = 2;
}

enum CIRCallingConv {
  CallingConv_C = 0;
  CallingConv_SpirKernel = 1;
  CallingConv_SpirFunction = 2;
}

enum CIRCaseOpKind {
  CaseOpKind_Default = 0;
  CaseOpKind_Equal = 1;
  CaseOpKind_Anyof = 2;
  CaseOpKind_Range = 3;
}

enum CIRCastKind {
  CastKind_IntToBool = 0;
  CastKind_ArrayToPtrdecay = 1;
  CastKind_Integral = 2;
  CastKind_Bitcast = 3;
  CastKind_Floating = 4;
  CastKind_PtrToBool = 5;
  CastKind_FloatToInt = 6;
  CastKind_IntToPtr = 7;
  CastKind_PtrToInt = 8;
  CastKind_FloatToBool = 9;
  CastKind_BoolToInt = 10;
  CastKind_IntToFloat = 11;
  CastKind_BoolToFloat = 12;
  CastKind_AddressSpace = 13;
  CastKind_FloatToComplex = 14;
  CastKind_IntToComplex = 15;
  CastKind_FloatComplexToReal = 16;
  CastKind_IntComplexToReal = 17;
  CastKind_FloatComplexToBool = 18;
  CastKind_IntComplexToBool = 19;
  CastKind_FloatComplex = 20;
  CastKind_FloatComplexToIntComplex = 21;
  CastKind_IntComplex = 22;
  CastKind_IntComplexToFloatComplex = 23;
}

enum CIRCatchParamKind {
  CatchParamKind_Begin = 0;
  CatchParamKind_End = 1;
}

enum CIRCmpOpKind {
  CmpOpKind_Lt = 0;
  CmpOpKind_Le = 1;
  CmpOpKind_Gt = 2;
  CmpOpKind_Ge = 3;
  CmpOpKind_Eq = 4;
  CmpOpKind_Ne = 5;
}

enum CIRCmpOrdering {
  CmpOrdering_Strong = 0;
  CmpOrdering_Partial = 1;
}

enum CIRComplexBinOpKind {
  ComplexBinOpKind_Mul = 0;
  ComplexBinOpKind_Div = 1;
}

enum CIRComplexRangeKind {
  ComplexRangeKind_Full = 0;
  ComplexRangeKind_Improved = 1;
  ComplexRangeKind_Promoted = 2;
  ComplexRangeKind_Basic = 3;
  ComplexRangeKind_None = 4;
}

enum CIRDynamicCastKind {
  DynamicCastKind_Ptr = 0;
  DynamicCastKind_Ref = 1;
}

enum CIRGlobalLinkageKind {
  GlobalLinkageKind_ExternalLinkage = 0;
  GlobalLinkageKind_AvailableExternallyLinkage = 1;
  GlobalLinkageKind_LinkOnceAnyLinkage = 2;
  GlobalLinkageKind_LinkOnceODRLinkage = 3;
  GlobalLinkageKind_WeakAnyLinkage = 4;
  GlobalLinkageKind_WeakODRLinkage = 5;
  GlobalLinkageKind_InternalLinkage = 6;
  GlobalLinkageKind_PrivateLinkage = 7;
  GlobalLinkageKind_ExternalWeakLinkage = 8;
  GlobalLinkageKind_CommonLinkage = 9;
}

enum CIRInlineKind {
  InlineKind_NoInline = 0;
  InlineKind_AlwaysInline = 1;
  InlineKind_InlineHint = 2;
}

enum CIRMemOrder {
  MemOrder_Relaxed = 0;
  MemOrder_Consume = 1;
  MemOrder_Acquire = 2;
  MemOrder_Release = 3;
  MemOrder_AcquireRelease = 4;
  MemOrder_SequentiallyConsistent = 5;
}

enum CIRSignedOverflowBehavior {
  SignedOverflowBehavior_Undefined = 0;
  SignedOverflowBehavior_Defined = 1;
  SignedOverflowBehavior_Trapping = 2;
}

enum CIRSizeInfoType {
  SizeInfoType_Min = 0;
  SizeInfoType_Max = 1;
}

enum CIRSourceLanguage {
  SourceLanguage_C = 0;
  SourceLanguage_CXX = 1;
  SourceLanguage_OpenCLC = 2;
}

enum CIRTLSModel {
  TLSModel_GeneralDynamic = 0;
  TLSModel_LocalDynamic = 1;
  TLSModel_InitialExec = 2;
  TLSModel_LocalExec = 3;
}

enum CIRUnaryOpKind {
  UnaryOpKind_Inc = 0;
  UnaryOpKind_Dec = 1;
  UnaryOpKind_Plus = 2;
  UnaryOpKind_Minus = 3;
  UnaryOpKind_Not = 4;
}

enum CIRVisibilityKind {
  VisibilityKind_Default = 0;
  VisibilityKind_Hidden = 1;
  VisibilityKind_Protected = 2;
}

enum CIRRecordKind {
  CIRRecordKind_Class = 0;
  CIRRecordKind_Union = 1;
  CIRRecordKind_Struct = 2;
}

enum MLIRSignednessSemantics {
  MLIRSignednessSemantics_Signless = 0;
  MLIRSignednessSemantics_Signed = 1;
  MLIRSignednessSemantics_Unsigned = 2;
}

// clang-format on
