// clang-format off
/* Autogenerated by mlir-tblgen; don't manually edit. */

syntax = "proto3";

package protocir;
option java_package = "org.jacodb.impl.grpc";

import "setup.proto";
import "enum.proto";
import "attr.proto";

message MLIRType {
  MLIRTypeID id = 1;
  oneof type {
    MLIRNoneType none_type = 2;
    MLIRIndexType index_type = 3;
    MLIRIntegerType integer_type = 4;
    CIRArrayType array_type = 5;
    CIRBFloat16Type b_float16_type = 6;
    CIRBoolType bool_type = 7;
    CIRComplexType complex_type = 8;
    CIRDataMemberType data_member_type = 9;
    CIRDoubleType double_type = 10;
    CIRExceptionType exception_type = 11;
    CIRFP16Type fp16_type = 12;
    CIRFP80Type fp80_type = 13;
    CIRFP128Type fp128_type = 14;
    CIRFuncType func_type = 15;
    CIRIntType int_type = 16;
    CIRLongDoubleType long_double_type = 17;
    CIRMethodType method_type = 18;
    CIRPointerType pointer_type = 19;
    CIRSingleType single_type = 20;
    CIRVectorType vector_type = 21;
    CIRVoidType void_type = 22;
    CIRStructType struct_type = 23;
  }
}

message MLIRNoneType {
}

message MLIRIndexType {
}

message MLIRIntegerType {
  uint32 width = 1;
  bool signed = 2;
}

message CIRArrayType {
  MLIRTypeID elt_type = 1;
  uint64 size = 2;
}

message CIRBFloat16Type {
}

message CIRBoolType {
}

message CIRComplexType {
  MLIRTypeID element_ty = 1;
}

message CIRDataMemberType {
  MLIRTypeID member_ty = 1;
  MLIRTypeID cls_ty = 2;
}

message CIRDoubleType {
}

message CIRExceptionType {
}

message CIRFP16Type {
}

message CIRFP80Type {
}

message CIRFP128Type {
}

message CIRFuncType {
  repeated MLIRTypeID inputs = 1;
  MLIRTypeID return_type = 2;
  bool var_arg = 3;
}

message CIRIntType {
  uint32 width = 1;
  bool is_signed = 2;
}

message CIRLongDoubleType {
  MLIRTypeID underlying = 1;
}

message CIRMethodType {
  MLIRTypeID member_func_ty = 1;
  MLIRTypeID cls_ty = 2;
}

message CIRPointerType {
  MLIRTypeID pointee = 1;
  optional MLIRAttribute addr_space = 2;
}

message CIRSingleType {
}

message CIRVectorType {
  MLIRTypeID elt_type = 1;
  uint64 size = 2;
}

message CIRVoidType {
}

message CIRStructType {
  repeated MLIRTypeID members = 1;
  MLIRStringAttr name = 2;
  bool incomplete = 3;
  bool packed = 4;
  CIRRecordKind kind = 5;
}
// clang-format on
