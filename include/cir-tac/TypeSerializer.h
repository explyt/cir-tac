/* Autogenerated by mlir-tblgen; don't manually edit. */
// clang-format off

#pragma once

#include "Util.h"
#include "cir-tac/AttrSerializer.h"
#include "proto/setup.pb.h"
#include "proto/type.pb.h"

#include <clang/CIR/Dialect/IR/CIRTypes.h>
#include <mlir/IR/Builders.h>

using namespace protocir;

class TypeSerializer {
public:
  TypeSerializer(MLIRModuleID moduleID, TypeCache &typeCache)
  : moduleID(moduleID), typeCache(typeCache), attributeSerializer(moduleID, typeCache) {
  }

  MLIRType serializeMLIRType(mlir::Type);

  MLIRNoneType serializeMLIRNoneType(mlir::NoneType);
  MLIRIndexType serializeMLIRIndexType(mlir::IndexType);
  MLIRIntegerType serializeMLIRIntegerType(mlir::IntegerType);

  CIRArrayType serializeCIRArrayType(cir::ArrayType);
  CIRBFloat16Type serializeCIRBFloat16Type(cir::BF16Type);
  CIRBoolType serializeCIRBoolType(cir::BoolType);
  CIRComplexType serializeCIRComplexType(cir::ComplexType);
  CIRDataMemberType serializeCIRDataMemberType(cir::DataMemberType);
  CIRDoubleType serializeCIRDoubleType(cir::DoubleType);
  CIRExceptionType serializeCIRExceptionType(cir::ExceptionInfoType);
  CIRFP16Type serializeCIRFP16Type(cir::FP16Type);
  CIRFP80Type serializeCIRFP80Type(cir::FP80Type);
  CIRFP128Type serializeCIRFP128Type(cir::FP128Type);
  CIRFuncType serializeCIRFuncType(cir::FuncType);
  CIRIntType serializeCIRIntType(cir::IntType);
  CIRLongDoubleType serializeCIRLongDoubleType(cir::LongDoubleType);
  CIRMethodType serializeCIRMethodType(cir::MethodType);
  CIRPointerType serializeCIRPointerType(cir::PointerType);
  CIRSingleType serializeCIRSingleType(cir::SingleType);
  CIRVectorType serializeCIRVectorType(cir::VectorType);
  CIRVoidType serializeCIRVoidType(cir::VoidType);
  CIRStructType serializeCIRStructType(cir::StructType);

private:
  MLIRModuleID moduleID;
  TypeCache &typeCache;
  AttributeSerializer attributeSerializer;
};

// clang-format on
