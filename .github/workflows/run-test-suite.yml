name: Test Suite runner

on:
  workflow_call:
    inputs:
      CLANGIR_REPOSITORY:
        description: "Name of ClangIR repository"
        required: true
        type: string
      CLANGIR_VERSION:
        description: "ClangIR version to use"
        required: true
        type: string
      TEST_REPOSITORY:
        description: "Test suite repository"
        required: true
        type: string
      TEST_COMMIT:
        description: "Test suite commit to checkout to"
        required: true
        type: string
      SEARCH_FOR_CIR:
        description: "If set, runner searches for precompiled CIR files"
        type: boolean
        default: false

env:
  TEST_DIRECTORY: "test-suite"
  CUSTOM_CLANG_PATH: "./clangir/llvm/build/bin/clang"

jobs:
  run-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Run Tests
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout cir-tac
      uses: actions/checkout@v4

    - name: Checkout test repository
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.TEST_COMMIT }}
        repository: ${{ inputs.TEST_REPOSITORY }}
        path: ${{ env.TEST_DIRECTORY }}

    - name: Restore clangir build
      uses: actions/cache/restore@v4
      with:
        path: clangir/llvm/build
        key: ${{ matrix.os }}-${{ inputs.CLANGIR_REPOSITORY }}-${{ inputs.CLANGIR_VERSION }}-clangir-build

    - name: Download cir-tac precompiled tools
      uses: actions/download-artifact@v4
      with:
        name: cir-tac-${{ matrix.os }}-${{ runner.arch }}
        path: ${{ github.workspace }}/build/tools

    - name: Add permissions to cir-tac tools
      run: |
        chmod -R +x ./build/tools/

    - name: Export stdlib for MacOS
      if: startsWith(runner.os, 'macOS')
      run: |
        SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
        echo "SDKROOT=$SDKROOT" >> $GITHUB_ENV

    - name: Install Packages (macOS)
      if: startsWith(runner.os, 'macOS')
      run: |
        brew install protobuf ninja

    - name: Run Test Suite
      run: |
        ./.github/workflows/run_test_suite.py "." \
        ${{ env.TEST_DIRECTORY }} \
        -c ${{ env.CUSTOM_CLANG_PATH }} \
        ${{ inputs.SEARCH_FOR_CIR && '--search-for-cir' || '' }}

    - name: Upload failed test outputs to GitHub artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failed-tests
        path: failures
