name: Build and push docker image of ClangIR (MacOS)

on:
  workflow_dispatch:
  workflow_call:

jobs:
  get-clangir-id:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read JSON
        id: set-matrix
        run: echo "matrix=$(jq -c . < ./.github/workflows/clangir-version.json)" >> $GITHUB_OUTPUT

  build:
    needs: get-clangir-id
    runs-on: macos-latest
    strategy:
      matrix:
        clangir: ${{ fromJSON(needs.get-clangir-id.outputs.matrix) }}

    steps:
      - name: Cache clangir build
        id: cache-clangir-build
        uses: actions/cache@v4
        with:
          path: clangir
          key: macos-latest-${{ matrix.clangir.repository }}-${{ matrix.clangir.version }}-clangir-build

      - name: Checkout clangir repo
        if: steps.cache-clangir-build.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.clangir.version }}
          repository: ${{ matrix.clangir.repository }}
          path: clangir

      - name: Build clangir
        if: steps.cache-clangir-build.outputs.cache-hit != 'true'
        run: |
          cd clangir/llvm && mkdir -p build && cd build
          cmake -GNinja -DLLVM_ENABLE_PROJECTS="clang;mlir" -DCLANG_ENABLE_CIR=ON -DCMAKE_BUILD_TYPE=MinSizeRel ..
          ninja

  upload:
    runs-on: ubuntu-latest
    needs: [build, get-clangir-id]
    strategy:
      matrix:
        clangir: ${{ fromJSON(needs.get-clangir-id.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore clangir built on macOS
        uses: actions/cache/restore@v4
        with:
          key: macos-latest-${{ matrix.clangir.repository }}-${{ matrix.clangir.version }}-clangir-build
          path: clangir
          fail-on-cache-miss: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create image tag
        run: |
          echo "IMAGE_TAG=clangir_macos-latest_build:${{ matrix.clangir.normalized_repo }}-${{ matrix.clangir.version }}" \
            >> $GITHUB_ENV

      - name: Build and push Docker image with clangir
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/DockerfileMacOS
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_TAG }}
